#!/usr/bin/env python
# -*- coding: utf-8 -*-
# 
# Copyright 2019 iNETS, RWTH Aachen University.
# Author: Florian Wischeler, Berk Acikgoz (2024).
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

import eder
import time

# verify the desired values
trx_frequency = 58.59e9
initial_RX_BF_RF_gain = 0x44 # 0xFF is the max
initial_RX_BB1_gain = 0x77
initial_RX_BB2_gain = 0x11
initial_RX_BB3_gain = 0xff

unit_name = "T582304952" # change this for different modules

evkplatform_type = "MB1"
custom_beambook_suffix = ""

do_lo_leakage_cal = False
rfm_type = "BFM06009"

trx_eder = eder.Eder(unit_name = unit_name, evkplatform_type = evkplatform_type, rfm_type = rfm_type)

trx_accessible = trx_eder is not None and hasattr(trx_eder, 'chip_present_status')

if hasattr(trx_eder, 'regs') and trx_accessible:
    print('[EVK06002 Init RX]: Starting initialization now!!!')
   
    trx_eder.reset()
   
    if do_lo_leakage_cal:
        trx_eder.run_tx_lo_leakage_cal(custom_beambook_suffix = custom_beambook_suffix)
    
    trx_eder.run_rx(trx_frequency)
    trx_eder.regs.wrrd('trx_tx_on', 0x1fffff) # activate all RF paths
    # print('Current state: ', trx_eder.state())
    
    # trx_eder.tx.bf.awv.bbp.set_selected_beambook(0)
    # print("Current TX beambook = " + str(trx_eder.tx.bf.awv.bbp.get_selected_beambook()))
    
    trx_eder.regs.wrrd('rx_gain_ctrl_bfrf', initial_RX_BF_RF_gain)
    trx_eder.regs.wrrd('rx_gain_ctrl_bb1', initial_RX_BB1_gain)
    trx_eder.regs.wrrd('rx_gain_ctrl_bb2', initial_RX_BB2_gain)
    trx_eder.regs.wrrd('rx_gain_ctrl_bb3', initial_RX_BB3_gain)
    #trx_eder.regs.wrrd('trx_rx_on', 0x1fffff)
    
    print("[EVK06002 Init RX]: TX default gains set")
    
    print('AGC control:', trx_eder.regs.rd('agc_int_en_ctrl'))
    print('RX BF RF Gain:', trx_eder.regs.rd('rx_gain_ctrl_bfrf'))
    print('[EVK06002 Init RX]: Initialization of antenna array evaluation kit completed.')
    
    print("[EVK06002 Init RX]: You can now connect the SPI connector and use direct SPI control. The following SPI read error is generated by the USB FTDI chip which not cannot communicate over SPI anymore. This is intended.")
    print("[EVK06002 Init RX]: After switching up the (four upper-most) SW3 inputs, press Ctrl+C to continue.")
    
    trx_eder.evkplatform.drv.spioff()
    
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\n[EVK06002 Init RX]: SPI set, terminating...")
        exit()
else:
    print("[EVK06002 Init RX]: Antenna array initialisation failed!")

